@model List<BuildStatusWallDisplay.Models.WorkflowStatus>
@{
    ViewData["Title"] = "Build Status Wall Display";
}

<div class="container">
    <h1 class="my-4 text-light">Build Status Wall Display</h1>
    
    <div class="row">
        @foreach (var workflow in Model)
        {
            // Set the background color based on the build status
            var colorClass = workflow.Status switch
            {
                BuildStatusWallDisplay.Models.BuildStatus.Success => "bg-success",
                BuildStatusWallDisplay.Models.BuildStatus.Failure => "bg-danger",
                _ => "bg-secondary"  // Unknown status shows as grey
            };
            
            <div class="col-md-4 mb-4">
                <a href="@workflow.BuildDetailsUrl" target="_blank" class="text-decoration-none">
                    <div class="card @colorClass text-white h-100">
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div>
                                <h5 class="card-title">@workflow.DisplayName</h5>
                                <p class="card-text">
                                    Status: @workflow.Status
                                    @if (workflow.IsBuilding)
                                    {
                                        <span class="ms-2">
                                            <i class="bi bi-arrow-clockwise spinning" title="Build in progress"></i>
                                        </span>
                                    }
                                    @if (workflow.HasError)
                                    {
                                        <span class="ms-2">
                                            <i class="bi bi-info-circle error-icon" title="@workflow.ErrorMessage" data-bs-toggle="tooltip" data-bs-placement="top"></i>
                                        </span>
                                    }
                                </p>
                            </div>
                            <div class="text-end">
                                <small>Last updated: @workflow.LastUpdated.ToLocalTime().ToString("g")</small>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        }
        
        @if (!Model.Any())
        {
            <div class="col-12">
                <div class="alert alert-info">
                    No workflow configurations found. Please check your configuration file.
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh the page every 30 seconds
        setTimeout(function() {
            window.location.reload();
        }, 30000);
        
        // Initialize Bootstrap tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
